{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SeachBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterdMosters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAGaA,G,YAAO,SAACC,GAAD,OACf,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAML,EAAMG,QAAQG,OACpB,4BAAIN,EAAMG,QAAQI,aCJdC,EAAW,SAACR,GAAD,OAGpB,qBAAKC,UAAU,YAAf,SAGID,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAEtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCPlBO,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACpB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAWF,MCiCAG,G,wDAnCb,aAAe,IAAD,8BACZ,gBAYFH,aAAe,SAACI,GAAD,OACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAZpC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAY,IAJF,E,gEAQM,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,+BAKhC,IAAD,EACyBC,KAAKN,MAA7Bb,EADD,EACCA,SAASU,EADV,EACUA,YACVU,EAAiBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC3CA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBACnD,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAce,KAAKf,eAGrB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA7BVI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c834e3e0.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props)=>(\r\n     <div className='card-Container'>\r\n         <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\"/>\r\n         <h3 >{props.monster.name}</h3>\r\n         <p>{props.monster.email}</p>\r\n\r\n    </div>\r\n);","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport {Card} from '../card/card.component'\r\nexport const CardList = (props)=>(\r\n    \r\n   \r\n    <div className='card-list'>\r\n        \r\n         {\r\n        props.monsters.map(monster => (\r\n          \r\n            <Card key={monster.id} monster={monster} />\r\n          \r\n        ))\r\n      }\r\n</div>\r\n);","import React from 'react'\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SeachBox = ({placeholder,handleChange}) =>(\r\n    <input \r\n    className='search'\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={ handleChange}\r\n       \r\n  \r\n      \r\n    \r\n    />\r\n);","import React , {Component} from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport { SeachBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField:''\n    }\n    \n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters:users}));\n  }\n  handleChange = (e) =>(\n    this.setState({searchField:e.target.value})\n  )\n  render(){\n    const {monsters,searchField} = this.state;\n    const filterdMosters = monsters.filter(monster => \n       monster.name.toLowerCase().includes(searchField.toLowerCase()) );\n    return(\n      <div className=\"App\">\n        <h1>Monsters Relodex</h1>\n        <SeachBox \n          placeholder='Search Monters'\n          handleChange={this.handleChange}\n        />\n\n        <CardList monsters={filterdMosters}/> \n        \n    </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}